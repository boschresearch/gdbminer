# Here are basic configurations which concern the generation of the grammar in general.
[BASIC]
seed_directory = ./example_programs/svgcpp/seeds

# Path to a directory where output files (e.g. graphs, logfiles) are stored.
output_directory = ./output/svgcpp/

binary_file = ./example_programs/svgcpp/svgpp/src/demo/render/build/svgpp_agg_render

#./example_programs/svgcpp/svgpp/src/demo/render/build/svgpp_agg_render

eval_directory = 

[Connection]
input_channel = file

# This section contains configurations which are relevant for GDB
[GDB]
gdb_path = gdb
instance = valgrind

# tracing will ignore function names that match the following regex 
# see https://docs.python.org/3/library/re.html
ignore_functions_regex = @plt|_vgr|std|boost
#^((?!(rapidxml|svgpp|loadSvg)).)*$
#
#strtod|__ctype_b_loc

# 

# Type of watchpoint (e.g. (uint8_t*), (uint16_t*), (uint32_t*), (char*), etc.).
# Sometimes it can be a little bit tricky to find the correct type because
# (uint8_t*) == (char*) == (uint8*) but it is not everytime clear, which type will be accepted.
# You know you do it wrong if you get the ERROR message 'No symbol table is loaded.  Use the "file" command.' when
# setting a watchpoint
watchpoint_type = (char*)
# Number of available watchpoints 
watchpoint_count = 10000

# Time how long GDB should wait for responses from GDBServer in seconds
timeout = 30

# Address or symbol name where tracing should start
entrypoint = svgpp_render.cpp:1738
#svg.cpp:113

# Address or symbol name where tracing should end
# or empty if tracing should stop when stepping out of entry function
exitpoint = svgpp_render.cpp:1764
#svgpp_render.cpp:1723
#svg.cpp:117

#The address of the input buffer or symbol name
input_buffer = my_string

[LOGS]
# One of {DEBUG, INFO, WARNING, ERROR, CRITICAL}
log_level = INFO
